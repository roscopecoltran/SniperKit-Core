###################################################################################
#                                                                 		          #
#  Build the image:                                               		          #
#    docker build -t repo-mined -f Dockerfile.dev --no-cache . 	                  #                          
#                                                                 		          #
#  Run the container:                                             		          #
#   docker run -ti --rm -v $(pwd)/data:/data/ -v $(pwd)/.env:/app/.env repo-mined #
#                                                                 		          #
###################################################################################

FROM python:3.6-alpine3.6
LABEL maintainer "Luc Michalski <michalski.luc@gmail.com>"

ARG RUNTIME_APK=${RUNTIME_APK:-"ca-certificates git libssh2 openssl libpng bash nano tree"}
ARG BUILD_APK=${BUILD_APK:-"musl-dev make cmake linux-headers gfortran g++ libpng-dev jpeg-dev zlib-dev cairo-dev"}

# ADD ./docker/repositories /etc/apk/repositories # if install numpy with add instead of pip

# Install runtime dependencies & create runtime user
RUN apk --no-cache --no-progress --update add ${RUNTIME_APK}

# Copy source code to the container & build it
COPY . /app
WORKDIR /app

# Copy source code to the container & install build deps
RUN apk --no-cache --no-progress --update --virtual build-deps add ${BUILD_APK} \
	&& pip install --no-cache -r requirements.txt \
	&& tree /app/bin \
	&& apk --no-cache --no-progress del build-deps

CMD ["/bin/bash"]

## please use ./bin/Dockerfile.release for a lighter and production deployment of repo-mine